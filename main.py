from config import TOKEN, OPENAI_TOKEN, TEST_TOKEN
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import openai
import json
import datetime
from SQLite_API import API as DB


class App:
    ERROR_FILE = 'errors.json'
    CONTEXT_FILE = 'context.json'


    def __init__(self) -> None:
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ OpenAI
        openai.api_key = OPENAI_TOKEN

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Ç–æ–∫–µ–Ω–∞
        self.updater = Updater(token=TOKEN, use_context=True)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º sql —Ç–∞–±–ª–∏—Ü—É
        self.db = DB()

        # –°–æ–∑–¥–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π. –ù—É–∂–Ω–µ–Ω –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä telegram'–∞ —Å–æ–±—ã—Ç–∏–π —Ä–∞–∑–Ω—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º
        self.dispatcher = self.updater.dispatcher

        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ /start –∏ /clear_context
        self.start_handler = CommandHandler('start', self.start_command)
        self.clear_handler = CommandHandler('clear_context', self.delete_context_and_send_message)
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ñ–∏–ª—å—Ç—Ä–æ–º - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.echo_handler = MessageHandler(Filters.text, self.send_answer)

        # –°–æ–µ–¥–∏–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Å–æ —Å–ª—É—à–∞—Ç–µ–ª–µ–º —ç—Ç–∏—Ö —Å–æ–±—ã—Ç–∏–π
        self.dispatcher.add_handler(self.start_handler)
        self.dispatcher.add_handler(self.clear_handler)
        self.dispatcher.add_handler(self.echo_handler)

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        self.updater.start_polling()
        print('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')

    def start_command(self, update, context: CallbackContext) -> None:
        update.message.reply_text(
            text="""
–ü—Ä–∏–≤–µ—Ç!

–≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–∞–º –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤–æ–π –º–æ–¥–µ–ª–∏ ChatGPT –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ OpenAI. 

‚ö°Ô∏è–ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ –º–æ–¥–µ–ª—å, —á—Ç–æ –∏ —Å–∞–π—Ç ChatGPT: gpt-3.5-turbo.

–ß–∞—Ç–±–æ—Ç —É–º–µ–µ—Ç:
1. –ü–∏—Å–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã; 
2. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –ª—é–±–æ–π; 
3. –ü–∏—Å–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥; 
4. –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã; 
5. –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏; 
6. –ú–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ. 

–í—ã –º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º, –∫–∞–∫ —Å –∂–∏–≤—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º, –∑–∞–¥–∞–≤–∞—è –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∏–Ω–æ–≥–¥–∞ –±–æ—Ç –ø—Ä–∏–¥—É–º—ã–≤–∞–µ—Ç —Ñ–∞–∫—Ç—ã, –∞ —Ç–∞–∫–∂–µ –æ–±–ª–∞–¥–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏ –æ —Å–æ–±—ã—Ç–∏—è—Ö –ø–æ—Å–ª–µ 2021 –≥–æ–¥–∞.

–ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —É—á–∏—Ç—ã–≤–∞—è –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—â–µ–Ω–∏—è. –û–Ω –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. –ù–æ –¥–ª–∏–Ω–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–Ω–æ 4000 —Å–∏–º–≤–æ–ª–æ–≤ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ü–æ—ç—Ç–æ–º—É, –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–µ–º—ã –≤–æ–ø—Ä–æ—Å–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /clear_context 
(–∫–æ–Ω—Ç–µ–∫—Å—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –≤—ã –µ–≥–æ –Ω–µ –æ—á–∏—Å—Ç–∏—Ç–µ, –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è).

–¢–∞–∫ –∂–µ —É—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –±–æ—Ç –º–æ–∂–µ—Ç —Ç—Ä–∞–∫—Ç–æ–≤–∞—Ç—å –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ —Å–æ–±—ã—Ç–∏—è –ø–æ —Ä–∞–∑–Ω–æ–º—É, –ø–æ—ç—Ç–æ–º—É –Ω–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –±–æ—Ç–∞ –∫–∞–∫ –∏—Å—Ç–∏–Ω—É –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏. 

üìã –ö–æ–≥–¥–∞ –¥–∞–µ—Ç–µ –±–æ—Ç—É –∑–∞–¥–∞–Ω–∏–µ, –ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ. –ï—Å–ª–∏ –±–æ—Ç –≥–¥–µ-—Ç–æ –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É –æ–± —ç—Ç–æ–º - –æ–Ω –∏—Å–ø—Ä–∞–≤–∏—Ç. 

–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —ç—Ç–æ—Ç –±–æ—Ç - –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤–∞—è –º–∞—à–∏–Ω–∞ - –∏ –ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –Ω–µ–≥–æ –Ω—É–∂–Ω–æ, –∫–∞–∫ –¥–ª—è –º–∞—à–∏–Ω—ã. –ò —Ç–æ–≥–¥–∞ –æ–Ω —Å–æ—Å–ª—É–∂–∏—Ç –≤–∞–º –¥–æ–±—Ä—É—é —Å–ª—É–∂–±—É.

‚è≥ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏ –æ–±—ä–µ–º–∞ –æ—Ç–≤–µ—Ç–∞. 
–û–Ω –º–æ–∂–µ—Ç –æ—Ç–≤–µ—Ç–∏—Ç—å —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É, –∞ –º–æ–∂–µ—Ç —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. –ù–æ —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ - 7-15 —Å–µ–∫—É–Ω–¥.
        """)

    def save_to_file(self, file: str, data: dict) -> None:
        try:
            with open(f"{file}", 'a', encoding='utf8') as file:
                json.dump(data, file, ensure_ascii=False, indent=4)
        except Exception as e:
            print(e)

    def send_answer(self, update, context: CallbackContext) -> None:
        context.bot.send_message(chat_id=update.effective_chat.id, text='–©–∞—Å –ø–æ–¥—É–º–∞—é...')

        question = update.message.text
        user_id = str(update.message.from_user.id)

        self.db.update_context(user_id, question)
        context_message = self.db.get_context(user_id)

        # –î–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É OpenAI
        answer = self.request_to_ai(question, context_message, user_id)
        self.db.update_context(user_id, answer)

        context.bot.send_message(chat_id=update.effective_chat.id, text=answer)

    def request_to_ai(self, text: str, context: str, user_id) -> str:
        request_time = datetime.datetime.now()
        for i in range(1, 6):
            try:
                completion = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": context},
                        {"role": "user", "content": text}
                    ]
                )
            except Exception as e:
                error = f'–î–ª–∏–Ω–∞ –≤–æ–ø—Ä–æ—Å–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∞. –ß–∏—Å—Ç–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç. {e}\n–í–æ–ø—Ä–æ—Å: {text}. –ü–æ–ø—ã—Ç–∫–∞: {i}'
                self.save_to_file(self.ERROR_FILE, {
                    'Error': {
                        'message': error,
                        'time': request_time.strftime("%H:%M:%S %Y-%m-%d")
                    }
                })
                self.db.delete_some_context(user_id)
                continue

            return completion.choices[0].message['content']
        else:
            return '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É.'

    def delete_context_and_send_message(self, update, context: CallbackContext) -> None:
        user_id = str(update.message.from_user.id)
        try:
            self.db.clear_context(user_id)
        except Exception as e:
            self.db.update_context(user_id, ' ')
            print('–û—à–∏–±–∫–∞ –∫–ª—é—á–∞. –¢–∞–∫–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞–ª –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', e)
        finally:
            update.message.reply_text(text='–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ—á–∏—â–µ–Ω.')


if __name__ == '__main__':
    App()
